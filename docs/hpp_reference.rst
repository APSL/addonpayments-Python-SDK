HPP Reference
=============
The HPP (Hosted Payment Page) generates JSON requests and receives the information from the selected transaction. Later, the JavaScript library provided by AddonPayments will manage the requests and answers. For more information about HPP, please visit the `HPP reference <https://desarrolladores.addonpayments.com/#!/hpp>`_ from Addon Payments developer hub.

Then we will see the steps to follow to generate JSON requests for each type of transaction:

.. note:: There are mandatory fields that are auto-generated by the SDK generation utilities

    - sha1hash: The SDK automatically generates a SHA-1 digital signature for each JSON requests.
    - order_id: The transaction ID can be defined by user or auto-generated by the SDK.
    - timestamp: The transaction timestamp can be defined by user or auto-generated by the SDK.

Process a Payment (Auth)
------------------------

For more detailed information, please see the section `Process a Payment <https://desarrolladores.addonpayments.com/#!/hpp/transaction-processing>`_ into Addon Payments developer hub.

1. Create the payment request.

2. Auto-generation of the fields and transformation to JSON.

.. code-block:: python

    from addonpayments.hpp.payment.requests import PaymentRequest
    # create request to send
    request = PaymentRequest(
        merchant_id='my_merchant_id',
        amount=10,
        currency='EUR',
        auto_settle_flag=True
    )
    # create request/response handler
    hpp = Hpp('my_secrect')
    # parse request object to json object
    json_request = hpp.request_to_json(req)

Card storage
------------

Create a payer and store card
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For more detailed information, please see the section `Create a payer and store card (Card storage) <https://desarrolladores.addonpayments.com/#!/hpp/card-storage-and-management/create-payer-and-store-card>`_ into Addon Payments developer hub.

1. Create the card storage request:
    - if payer reference (payer_ref) and payment reference (pmt_ref) are empty, these references are internally generates by AddonPayments.

2. Auto-generation of the fields and transformation to JSON.

.. code-block:: python

    from addonpayments.hpp.card_storage.requests import CardStorageRequest
    # create request to send
    request = CardStorageRequest(
        merchant_id='my_merchant_id',
        amount=10,
        currency='EUR',
        auto_settle_flag=True,
        card_storage_enable=True,
        offer_save_card=True,
        payer_exists=False,
        payer_ref='payer_ref',
        pmt_ref='pmt_ref'
    )
    # create request/response handler
    hpp = Hpp('my_secrect')
    # parse request object to json object
    json_request = hpp.request_to_json(req)

Display stored cards to the customer
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For more detailed information, please see the section `Display stored cards to the customer (Card storage) <https://desarrolladores.addonpayments.com/#!/hpp/card-storage-and-management/display-stored-cards>`_ into Addon Payments developer hub.

1. Create the display stored cards request.

2. Auto-generation of the fields and transformation to JSON.

.. code-block:: python

    from addonpayments.hpp.card_storage.requests import DisplayCardsRequest
    # create request to send
    request = DisplayCardsRequest(
        merchant_id='my_merchant_id',
        amount=10,
        currency='EUR',
        auto_settle_flag=True,
        hpp_select_stored_card='payer_ref',
        payer_exists=True,
        offer_save_card=True,
    )
    # create request/response handler
    hpp = Hpp('my_secrect')
    # parse request object to json object
    json_request = hpp.request_to_json(req)

Recurring
~~~~~~~~~

For more detailed information, please see the section `Recurring (Card storage) <https://desarrolladores.addonpayments.com/#!/hpp/card-storage-and-management/recurring>`_ into Addon Payments developer hub.

1. Create the recurring request.

2. Auto-generation of the fields and transformation to JSON.

.. code-block:: python

    from addonpayments.hpp.card_storage.requests import RecurringPaymentRequest
    # create request to send
    request = RecurringPaymentRequest(
        merchant_id='my_merchant_id',
        amount=10,
        currency='EUR',
        auto_settle_flag=True,
        card_storage_enable=True,
        offer_save_card=True,
        payer_exists=True,
        payer_ref='payer_ref',
        pmt_ref='pmt_ref'
    )
    # create request/response handler
    hpp = Hpp('my_secrect')
    # parse request object to json object
    json_request = hpp.request_to_json(req)
